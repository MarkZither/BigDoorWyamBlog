@section Header {
    @Html.Partial("_IndexHeader")
}

<div class="row">
    <div class="col-sm-12 right-border">
        @{
            bool first = true;
            foreach(IDocument post in Model.DocumentList(Keys.PageDocuments))
            {                
                if (!first)
                {
                    <!--hr /--> 
                }
                first = false;
                string lead = post.String(BlogKeys.Lead);
                string Image  = post.String("Image");
                var Tags = post.Get<string[]>(BlogKeys.Tags);
                if(!string.IsNullOrWhiteSpace(Image))
                {
                    Image =  Image.Replace("/input","");
                }
                else
                {
                            
                }
                        <div class="post-list">
        <div class="post-blog">
            <h5><a href="@Context.GetLink(post)" class="text-base">@post.WithoutSettings.String(BlogKeys.Title)</a></h5>
                <p class="post-blog-meta small offset-top-16">
                <a href="blog-single-post.html">@post.WithoutSettings.String("Author")</a> - <a href="#" class="text-gray">@(post.Get<DateTime>(BlogKeys.Published).ToLongDateString(Context))</a>
                </p>


                <div class="thumbnail-variant-1"><a href="@Context.GetLink(post)">
                <img src="@Image" width="886" height="520" alt="" class="img-responsive center-block"></a>
                    </div>
                    @if(!string.IsNullOrWhiteSpace(lead))
                    {
                        <p class="offset-top-20">
                            @lead
                        </p>
                    }
                    @if(Context.Bool(BlogKeys.ArchiveExcerpts))
            {
                @Html.Raw(post.String(BlogKeys.Excerpt))
            }    
                        <div class="range offset-top-20 range-xs-middle">
                          <div class="cell-md-8">
                            <p class="small">
                            <span class="inset-right-10 reveal-inline-block">
                            Tags:         @foreach (string tag in Tags.OrderBy(x => x))
            {
                IDocument tagDocument = Documents[Blog.Tags].FirstOrDefault(x => x.String(BlogKeys.Tag) == tag && x.Get<int>(Keys.CurrentPage) == 1);
                if(tagDocument != null)
                {          
                    <span class="inset-left-5"><a href="@Context.GetLink(tagDocument)">@tag</a>
                    </span>      

                }
            }  
                            </span>
                            </p>
                          </div>
                          <div class="cell-md-4 text-md-right offset-top-16 offset-md-top-0"><a href="@Context.GetLink(post)" class="btn btn-base">read more</a></div>
                        </div>
            </div>
        </div>     
            }
        }
        <ul class="pager">
            <li class="previous">                
                @if(Model.Bool(Keys.HasPreviousPage))
                {
                    <a href="@(Context.GetLink(Model.Document(Keys.PreviousPage)))"><span aria-hidden="true">&larr;</span> Newer</a>
                }                
            </li>
            <li class="next">
                @if(Model.Bool(Keys.HasNextPage))
                {
                    <a href="@(Context.GetLink(Model.Document(Keys.NextPage)))">Older <span aria-hidden="true">&rarr;</span></a>
                }
            </li>
        </ul>
    </div>
</div>
